apply plugin: 'com.android.application'

android {
    def gradleConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion gradleConfig["compileSdkVersion"]
    buildToolsVersion gradleConfig["buildToolsVersion"]
    defaultConfig {
        applicationId gradleConfig["applicationId"]
        minSdkVersion gradleConfig["minSdkVersion"]
        targetSdkVersion gradleConfig["targetSdkVersion"]
        versionCode gradleConfig["versionCode"]
        versionName gradleConfig["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def supportDependencies = rootProject.ext.sdkSupportDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.testDependencies

    compile supportDependencies.appcompatV7
    compile supportDependencies.constraint
    testCompile testDependencies.junit

    //ARouter
    annotationProcessor dataDependencies.arouterCompiler

    compile project(':library:baselibrary')

    if (!rootProject.ext.androidConfig.loginIsApp) {
        compile project(':module:login')
    }
}
